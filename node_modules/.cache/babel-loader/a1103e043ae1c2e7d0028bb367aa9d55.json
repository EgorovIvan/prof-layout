{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"catalog__list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductItem = _resolveComponent(\"ProductItem\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.products, item => {\n    return _openBlock(), _createBlock(_component_ProductItem, {\n      class: \"catalog__item\",\n      key: item.id_product,\n      img: item.img,\n      product: item\n    }, null, 8\n    /* PROPS */\n    , [\"img\", \"product\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;EACMA,KAAK,EAAC;;;;;uBAAXC,oBAEM,KAFN,cAEM,oBADLA,oBAAoHC,SAApH,EAAoH,IAApH,EAAoHC,YAAlEC,eAAkE,EAA1EC,IAAgB,IAAZ;yBAA9CC,aAAoHC,sBAApH,EAAoH;MAAvGP,KAAK,EAAC,eAAiG;MAAvDQ,GAAG,EAAEH,IAAI,CAACI,UAA6C;MAAhCC,GAAG,EAAEL,IAAI,CAACK,GAAsB;MAAhBC,OAAO,EAAEN;IAAO,CAApH;;IAAA;GAAoH,CAApH;;EAAA,CACK,EAFN","names":["class","_createElementBlock","_Fragment","_renderList","$props","item","_createBlock","_component_ProductItem","key","id_product","img","product"],"sourceRoot":"","sources":["C:\\Project\\Geekbrains\\prof-layout\\src\\components\\CatalogProducts.vue"],"sourcesContent":["<template>\r\n\t<div class=\"catalog__list\">\r\n\t\t<ProductItem class=\"catalog__item\" v-for=\"item of products\" :key=\"item.id_product\" :img=\"item.img\" :product=\"item\"/>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport ProductItem from \"./ProductItem\";\r\n\t\r\n\texport default {\r\n\t\tname: \"CatalogProducts\",\r\n\t\tprops: ['products'],\r\n\t\tcomponents: {\r\n\t\t\tProductItem,\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tcartUrl: '/api/cart',\r\n\t\t\t\tcartItems: []\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\taddProduct(product) {\r\n\t\t\t\tlet find = this.cartItems.find((item => product.id_product === item.id_product))\r\n\t\t\t\tif (find) {\r\n\t\t\t\t\t// ${this.$root.api + this.cartUrl + \"/\" + find.id_product}\r\n\t\t\t\t\tthis.$root.putJson(`http://localhost:3000/api/cart/${find.id_product}`, {quantity: 1})\r\n\t\t\t\t\t\t.then(data => {\r\n\t\t\t\t\t\t\tif (data.result === 1) {\r\n\t\t\t\t\t\t\t\tfind.quantity++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst prod = Object.assign({quantity: 1}, product);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.$root.getJson(`${this.$root.api + this.cartUrl}`)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tfor (let item of data.contents) {\r\n\t\t\t\t\t\tthis.cartItems.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(this.cartItems)\r\n\t\t\t\t});\r\n\t\t},\r\n\t}\r\n</script>"]},"metadata":{},"sourceType":"module"}